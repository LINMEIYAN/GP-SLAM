%!PS-Adobe-3.0 EPSF-3.0
%%Title: WMF2EPS 1.32  : WMF->EPS conversion for Robot_kinematics.wmf
%%Creator: PScript5.dll Version 5.2.2
%%CreationDate: 2/14/2009 11:13:2
%%For: leejoon8
%%BoundingBox: 56 56 345 337
%%Pages: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentData: Clean7Bit
%%TargetDevice: (WMF2EPS Color PS) (2010.0) 2
%%LanguageLevel: 2
%%EndComments

%%BeginDefaults
%%PageBoundingBox: 0 0 345 337
%%ViewingOrientation: 1 0 0 1
%%EndDefaults

%%BeginProlog
%%BeginResource: file Pscript_WinNT_ErrorHandler 5.0 0
/currentpacking where{pop/oldpack currentpacking def/setpacking where{pop false
setpacking}if}if/$brkpage 64 dict def $brkpage begin/prnt{dup type/stringtype
ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def currentpoint/toy exch
def/tox exch def 1 setgray newpath tox toy 2 sub moveto 0 ty rlineto tx 0
rlineto 0 ty neg rlineto closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def/=={/cp 0 def
typeprint nl}def/typeprint{dup type exec}readonly def/lmargin 72 def/rmargin 72
def/tprint{dup length cp add rmargin gt{nl/cp 0 def}if dup length cp add/cp
exch def prnt}readonly def/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def/realtype{cvsprint}readonly def/booleantype
{cvsprint}readonly def/operatortype{(--)tprint =string cvs tprint(-- )tprint}
readonly def/marktype{pop(-mark- )tprint}readonly def/dicttype{pop
(-dictionary- )tprint}readonly def/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def/savetype{pop(-savelevel- )
tprint}readonly def/fonttype{pop(-fontid- )tprint}readonly def/nametype{dup
xcheck not{(/)tprint}if cvsprint}readonly def/stringtype{dup rcheck{(\()tprint
tprint(\))tprint}{pop(-string- )tprint}ifelse}readonly def/arraytype{dup rcheck
{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}forall(])
tprint}ifelse}{pop(-array- )tprint}ifelse}readonly def/packedarraytype{dup
rcheck{dup xcheck{({)tprint{typeprint}forall(})tprint}{([)tprint{typeprint}
forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse}readonly def/courier
/Courier findfont 10 scalefont def end errordict/handleerror{systemdict begin
$error begin $brkpage begin newerror{/newerror false store vmstatus pop pop 0
ne{grestoreall}if errorname(VMerror)ne{showpage}if initgraphics courier setfont
lmargin 720 moveto errorname(VMerror)eq{userdict/ehsave known{clear userdict
/ehsave get restore 2 vmreclaim}if vmstatus exch pop exch pop PrtVMMsg}{
(ERROR: )prnt errorname prnt nl(OFFENDING COMMAND: )prnt/command load prnt
$error/ostack known{nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}
repeat}if}ifelse systemdict/showpage get exec(%%[ Error: )print errorname
=print(; OffendingCommand: )print/command load =print( ]%%)= flush}if end end
end}dup 0 systemdict put dup 4 $brkpage put bind readonly put/currentpacking
where{pop/setpacking where{pop oldpack setpacking}if}if
%%EndResource
userdict /Pscript_WinNT_Incr 230 dict dup begin put
%%BeginResource: file Pscript_FatalError 5.0 0
userdict begin/FatalErrorIf{{initgraphics findfont 1 index 0 eq{exch pop}{dup
length dict begin{1 index/FID ne{def}{pop pop}ifelse}forall/Encoding
{ISOLatin1Encoding}stopped{StandardEncoding}if def currentdict end
/ErrFont-Latin1 exch definefont}ifelse exch scalefont setfont counttomark 3 div
cvi{moveto show}repeat showpage quit}{cleartomark}ifelse}bind def end
%%EndResource
userdict begin/PrtVMMsg{vmstatus exch sub exch pop gt{[
(This job requires more memory than is available in this printer.)100 500
(Try one or more of the following, and then print again:)100 485
(For the output format, choose Optimize For Portability.)115 470
(In the Device Settings page, make sure the Available PostScript Memory is accurate.)
115 455(Reduce the number of fonts in the document.)115 440
(Print the document in parts.)115 425 12/Times-Roman showpage
(%%[ PrinterError: Low Printer VM ]%%)= true FatalErrorIf}if}bind def end
version cvi 2016 ge{/VM?{pop}bind def}{/VM? userdict/PrtVMMsg get def}ifelse
%%BeginResource: file Pscript_Win_Basic 5.0 0
/d/def load def/,/load load d/~/exch , d/?/ifelse , d/!/pop , d/`/begin , d/^
/index , d/@/dup , d/+/translate , d/$/roll , d/U/userdict , d/M/moveto , d/-
/rlineto , d/&/currentdict , d/:/gsave , d/;/grestore , d/F/false , d/T/true ,
d/N/newpath , d/E/end , d/Ac/arc , d/An/arcn , d/A/ashow , d/D/awidthshow , d/C
/closepath , d/V/div , d/O/eofill , d/L/fill , d/I/lineto , d/-c/curveto , d/-M
/rmoveto , d/+S/scale , d/Ji/setfont , d/Lc/setlinecap , d/Lj/setlinejoin , d
/Lw/setlinewidth , d/Lm/setmiterlimit , d/sd/setdash , d/S/show , d/LH/showpage
, d/K/stroke , d/W/widthshow , d/R/rotate , d/L2? false/languagelevel where{pop
languagelevel 2 ge{pop true}if}if d L2?{/xS/xshow , d/yS/yshow , d/zS/xyshow ,
d}if/b{bind d}bind d/bd{bind d}bind d/xd{~ d}bd/ld{, d}bd/bn/bind ld/lw/Lw ld
/lc/Lc ld/lj/Lj ld/sg/setgray ld/ADO_mxRot null d/self & d/OrgMx matrix
currentmatrix d/reinitialize{: OrgMx setmatrix[/TextInit/GraphInit/UtilsInit
counttomark{@ where{self eq}{F}?{cvx exec}{!}?}repeat cleartomark ;}b
/initialize{`{/Pscript_Win_Data where{!}{U/Pscript_Win_Data & put}?/ADO_mxRot ~
d/TextInitialised? F d reinitialize E}{U/Pscript_Win_Data 230 dict @ ` put
/ADO_mxRot ~ d/TextInitialised? F d reinitialize}?}b/terminate{!{& self eq
{exit}{E}?}loop E}b/suspend/terminate , d/resume{` Pscript_Win_Data `}b U `
/lucas 21690 d/featurebegin{countdictstack lucas[}b/featurecleanup{stopped
{cleartomark @ lucas eq{! exit}if}loop countdictstack ~ sub @ 0 gt{{E}repeat}
{!}?}b E/snap{transform 0.25 sub round 0.25 add ~ 0.25 sub round 0.25 add ~
itransform}b/dsnap{dtransform round ~ round ~ idtransform}b/nonzero_round{@ 0.5
ge{round}{@ -0.5 lt{round}{0 ge{1}{-1}?}?}?}b/nonzero_dsnap{dtransform
nonzero_round ~ nonzero_round ~ idtransform}b U<04>cvn{}put/rr{1 ^ 0 - 0 ~ -
neg 0 - C}b/irp{4 -2 $ + +S fx 4 2 $ M 1 ^ 0 - 0 ~ - neg 0 -}b/rp{4 2 $ M 1 ^ 0
- 0 ~ - neg 0 -}b/solid{[]0 sd}b/g{@ not{U/DefIf_save save put}if U/DefIf_bool
2 ^ put}b/DefIf_El{if U/DefIf_bool get not @{U/DefIf_save get restore}if}b/e
{DefIf_El !}b/UDF{L2?{undefinefont}{!}?}b/UDR{L2?{undefineresource}{! !}?}b
/freeVM{/Courier findfont[40 0 0 -40 0 0]makefont Ji 2 vmreclaim}b/hfRedefFont
{findfont @ length dict `{1 ^/FID ne{d}{! !}?}forall & E @ ` ~{/CharStrings 1
dict `/.notdef 0 d & E d}if/Encoding 256 array 0 1 255{1 ^ ~/.notdef put}for d
E definefont !}bind d/hfMkCIDFont{/CIDFont findresource @ length 2 add dict `{1
^ @/FID eq ~ @/XUID eq ~/UIDBase eq or or{! !}{d}?}forall/CDevProc ~ d/Metrics2
16 dict d/CIDFontName 1 ^ d & E 1 ^ ~/CIDFont defineresource ![~]composefont !}
bind d
%%EndResource
%%BeginResource: file Pscript_Win_Utils_L2 5.0 0
/rf/rectfill , d/fx{1 1 dtransform @ 0 ge{1 sub 0.5}{1 add -0.5}? 3 -1 $ @ 0 ge
{1 sub 0.5}{1 add -0.5}? 3 1 $ 4 1 $ idtransform 4 -2 $ idtransform}b/BZ{4 -2 $
snap + +S fx rf}b/rs/rectstroke , d/rc/rectclip , d/UtilsInit{currentglobal{F
setglobal}if}b/scol{! setcolor}b/colspA/DeviceGray d/colspABC/DeviceRGB d
/colspRefresh{colspABC setcolorspace}b/SetColSpace{colspABC setcolorspace}b
/resourcestatus where{!/ColorRendering/ProcSet resourcestatus{! ! T}{F}?}{F}?
not{/ColorRendering<</GetHalftoneName{currenthalftone @/HalftoneName known{
/HalftoneName get}{!/none}?}bn/GetPageDeviceName{currentpagedevice @
/PageDeviceName known{/PageDeviceName get @ null eq{!/none}if}{!/none}?}bn
/GetSubstituteCRD{!/DefaultColorRendering/ColorRendering resourcestatus{! !
/DefaultColorRendering}{(DefaultColorRendering*){cvn exit}127 string
/ColorRendering resourceforall}?}bn>>/defineresource where{!/ProcSet
defineresource !}{! !}?}if/buildcrdname{/ColorRendering/ProcSet findresource `
mark GetHalftoneName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)
GetPageDeviceName @ type @/nametype ne ~/stringtype ne and{!/none}if(.)5 ^ 0 5
-1 1{^ length add}for string 6 1 $ 5 ^ 5{~ 1 ^ cvs length 1 ^ length 1 ^ sub
getinterval}repeat ! cvn 3 1 $ ! ! E}b/definecolorrendering{~ buildcrdname ~
/ColorRendering defineresource !}b/findcolorrendering where{!}{
/findcolorrendering{buildcrdname @/ColorRendering resourcestatus{! ! T}{
/ColorRendering/ProcSet findresource ` GetSubstituteCRD E F}?}b}?
/selectcolorrendering{findcolorrendering !/ColorRendering findresource
setcolorrendering}b/G2UBegin{findresource/FontInfo get/GlyphNames2Unicode get
`}bind d/G2CCBegin{findresource/FontInfo get/GlyphNames2HostCode get `}bind d
/G2UEnd{E}bind d/AddFontInfoBegin{/FontInfo 8 dict @ `}bind d/AddFontInfo{
/GlyphNames2Unicode 16 dict d/GlyphNames2HostCode 16 dict d}bind d
/AddFontInfoEnd{E d}bind d/T0AddCFFMtx2{/CIDFont findresource/Metrics2 get ` d
E}bind d
%%EndResource
end
%%EndProlog

%%BeginSetup
[ 1 0 0 1 0 0 ] false Pscript_WinNT_Incr dup /initialize get exec
1 setlinecap 1 setlinejoin
/mysetup [ 72 600 V 0 0 -72 600 V 0 336.75592 ] def 
%%EndSetup

%%Page: 1 1
%%PageBoundingBox: 0 0 345 337
%%EndPageComments
%%BeginPageSetup
/DeviceRGB dup setcolorspace /colspABC exch def
mysetup concat colspRefresh
%%EndPageSetup

Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_GdiObject 5.0 0
/SavedCTM null d/CTMsave{/SavedCTM SavedCTM currentmatrix d}b/CTMrestore
{SavedCTM setmatrix}b/mp null d/ADO_mxRot null d/GDIHMatrix null d
/GDIHPatternDict 22 dict d GDIHPatternDict `/PatternType 1 d/PaintType 2 d/Reps
L2?{1}{5}? d/XStep 8 Reps mul d/YStep XStep d/BBox[0 0 XStep YStep]d/TilingType
1 d/PaintProc{` 1 Lw[]0 sd PaintData , exec E}b/FGnd null d/BGnd null d
/HS_Horizontal{horiz}b/HS_Vertical{vert}b/HS_FDiagonal{fdiag}b/HS_BDiagonal
{biag}b/HS_Cross{horiz vert}b/HS_DiagCross{fdiag biag}b/MaxXYStep XStep YStep
gt{XStep}{YStep}? d/horiz{Reps{0 4 M XStep 0 - 0 8 +}repeat 0 -8 Reps mul + K}b
/vert{Reps{4 0 M 0 YStep - 8 0 +}repeat 0 -8 Reps mul + K}b/biag{Reps{0 0 M
MaxXYStep @ - 0 YStep neg M MaxXYStep @ - 0 8 +}repeat 0 -8 Reps mul + 0 YStep
M 8 8 - K}b/fdiag{Reps{0 0 M MaxXYStep @ neg - 0 YStep M MaxXYStep @ neg - 0 8
+}repeat 0 -8 Reps mul + MaxXYStep @ M 8 -8 - K}b E/makehatch{4 -2 $/yOrg ~ d
/xOrg ~ d GDIHPatternDict/PaintData 3 -1 $ put CTMsave GDIHMatrix setmatrix
GDIHPatternDict matrix xOrg yOrg + mp CTMrestore ~ U ~ 2 ^ put}b/h0{/h0
/HS_Horizontal makehatch}b/h1{/h1/HS_Vertical makehatch}b/h2{/h2/HS_FDiagonal
makehatch}b/h3{/h3/HS_BDiagonal makehatch}b/h4{/h4/HS_Cross makehatch}b/h5{/h5
/HS_DiagCross makehatch}b/GDIBWPatternMx null d/pfprep{save 8 1 $
/PatternOfTheDay 8 1 $ GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/yExt
~ d/Width ~ d/BGnd ~ d/FGnd ~ d/Height yExt RepsV mul d/mx[Width 0 0 Height 0
0]d E build_pattern ~ !}b/pfbf{/fEOFill ~ d pfprep hbf fEOFill{O}{L}? restore}b
/GraphInit{GDIHMatrix null eq{/SavedCTM matrix d : ADO_mxRot concat 0 0 snap +
: 0.48 @ GDIHPatternDict ` YStep mul ~ XStep mul ~ nonzero_dsnap YStep V ~
XStep V ~ E +S/GDIHMatrix matrix currentmatrix readonly d ; : 0.24 -0.24 +S
GDIBWPatternDict ` Width Height E nonzero_dsnap +S/GDIBWPatternMx matrix
currentmatrix readonly d ; ;}if}b
%%EndResource
%%BeginResource: file Pscript_Win_GdiObject_L2 5.0 0
/GDIBWPatternDict 25 dict @ `/PatternType 1 d/PaintType 1 d/RepsV 1 d/RepsH 1 d
/BBox[0 0 RepsH 1]d/TilingType 1 d/XStep 1 d/YStep 1 d/Height 8 RepsV mul d
/Width 8 d/mx[Width 0 0 Height neg 0 Height]d/FGnd null d/BGnd null d
/SetBGndFGnd{BGnd null ne{BGnd aload ! scol BBox aload ! 2 ^ sub ~ 3 ^ sub ~
rf}if FGnd null ne{FGnd aload ! scol}if}b/PaintProc{` SetBGndFGnd RepsH{Width
Height F mx PaintData imagemask Width 0 +}repeat E}b E d/mp/makepattern , d
/build_pattern{CTMsave GDIBWPatternMx setmatrix/nupangle where{! nupangle -90
eq{nupangle R}if}if GDIBWPatternDict @ ` Width Height ne{Width Height gt{Width
Height V 1}{1 Height Width V}? +S}if xOrg yOrg E matrix + mp CTMrestore}b/hbf
{setpattern}b/hf{:/fEOFill ~ d ~ ! setpattern fEOFill{O}{L}? ;}b/pbf{: !
/fEOFill ~ d GDIBWPatternDict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/OutputBPP ~ d
/Height ~ d/Width ~ d/PaintType 1 d/PatternType 1 d/TilingType 1 d/BBox[0 0
Width Height]d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d 20 dict @ `
/ImageType 1 d/Width Width d/Height Height d/ImageMatrix[1 0 0 1 0 0]d
/BitsPerComponent 8 d OutputBPP 24 eq{/Decode[0 1 0 1 0 1]d}{OutputBPP 8 eq{
/Decode[0 1]d}{/Decode[0 1 0 1 0 1 0 1]d}?}?/DataSource{PaintData}d E/ImageDict
~ d/PaintProc{` ImageDict image E}b & mx makepattern setpattern E fEOFill{O}{L}
? ;}b/mask_pbf{:/fEOFill ~ d 20 dict `/yOrg ~ d/xOrg ~ d/PaintData ~ d/Height ~
d/Width ~ d/PatternType 1 d/PaintType 2 d/TilingType 1 d/BBox[0 0 Width Height]
d/XStep Width d/YStep Height d/mx xOrg yOrg matrix + d/PaintProc{` Width Height
T 1 1 dtransform abs ~ abs ~ 0 0 3 -1 $ 0 0 6 array astore{PaintData}imagemask
E}b & mx makepattern setpattern E fEOFill{O}{L}? ;}b
%%EndResource
end reinitialize
0 0 0 1 scol 1 Lj 1 Lc 29 Lw solid N 525 2246 M 525 311 I : 0.605 0.605 +S K 
; N 487 321 M 524 207 I 562 321 I 487 321 I C 
 O N 525 2246 M 2645 2246 I : 0.605 0.605 +S K 
; N 2635 2208 M 2748 2246 I 2635 2284 I 2635 2208 I C 
 O 54 Lw N 1949 485 M 1222 680 I : 0.605 0.605 +S K 
; N 2141 1202 M 1425 1393 I : 0.605 0.605 +S K 
; 16 Lw N 1591 581 M 1783 1297 I : 0.605 0.605 +S K 
; 29 Lw N 1687 939 M 2045 844 I : 0.605 0.605 +S K 
; N 2066 922 M 2074 919 I 2082 916 I 2089 912 I 2095 907 I 2106 896 I 2111 890 I 2115 884 I 2119 877 I 2122 870 I 2125 862 I 2126 855 I 2126 847 I 2126 839 I 2125 830 I 2124 823 I 2121 815 I 2118 807 I 2114 800 I 2109 793 I 2098 783 I 2092 778 I 2086 773 I 2079 770 I 2072 767 I 2065 764 I 2057 763 I 2049 763 I 2040 763 I 2032 763 I 2025 765 I 2017 768 I 2009 771 I 2002 775 I 1996 780 I 1984 790 I 1979 796 I 1975 803 I 1971 810 I 1969 817 I 1966 824 I 1965 832 I 1965 840 I 1965 848 I 1965 856 I 1967 864 I 1969 872 I 1973 880 I 1977 887 I 1982 893 I 1992 905 I 1999 910 I 2005 914 I 2012 917 I 2019 920 I 2026 922 I 2034 924 I 2042 924 I 2050 924 I 2059 924 I 2066 922 I C 
1 1 1 1 scol  O 0 0 0 1 scol 16 Lw N 2066 922 M 2074 919 I 2082 916 I 2089 912 I 2095 907 I 2106 896 I 2111 890 I 2115 884 I 2119 877 I 2122 870 I 2125 862 I 2126 855 I 2126 847 I 2126 839 I 2125 830 I 2124 823 I 2121 815 I 2118 807 I 2114 800 I 2109 793 I 2098 783 I 2092 778 I 2086 773 I 2079 770 I 2072 767 I 2065 764 I 2057 763 I 2049 763 I 2040 763 I 2032 763 I 2025 765 I 2017 768 I 2009 771 I 2002 775 I 1996 780 I 1984 790 I 1979 796 I 1975 803 I 1971 810 I 1969 817 I 1966 824 I 1965 832 I 1965 840 I 1965 848 I 1965 856 I 1967 864 I 1969 872 I 1973 880 I 1977 887 I 1982 893 I 1992 905 I 1999 910 I 2005 914 I 2012 917 I 2019 920 I 2026 922 I 2034 924 I 2042 924 I 2050 924 I 2059 924 I 2066 922 I : 0.605 0.605 +S K 
; N 2206 1760 M 2007 1813 I : 0.605 0.605 +S K 
; N 2191 1733 M 2285 1738 I 2206 1791 I 2191 1733 I C 
 O N 2022 1840 M 1927 1835 I 2006 1782 I 2022 1840 I C 
 O 1 Lw solid N 2045 841 M 2083 828 I 2085 828 I 2087 830 I 2086 832 I 2085 833 I 2046 846 I 2044 846 I 2043 844 I 2043 842 I 2045 841 I 2045 841 I C 
2111 819 M 2149 806 I 2152 806 I 2153 807 I 2153 810 I 2151 811 I 2112 824 I 2110 824 I 2109 823 I 2109 820 I 2111 819 I 2111 819 I C 
2177 796 M 2215 784 I 2218 784 I 2219 786 I 2219 788 I 2217 789 I 2178 802 I 2177 802 I 2175 800 I 2175 798 I 2177 796 I 2177 796 I C 
2243 775 M 2281 761 I 2284 762 I 2285 763 I 2285 766 I 2283 767 I 2245 780 I 2243 780 I 2241 778 I 2241 776 I 2243 775 I 2243 775 I C 
2309 752 M 2348 740 I 2350 740 I 2352 741 I 2351 744 I 2350 745 I 2311 758 I 2309 758 I 2307 756 I 2307 754 I 2309 752 I 2309 752 I C 
2375 730 M 2414 718 I 2417 718 I 2418 720 I 2418 721 I 2416 723 I 2377 736 I 2375 736 I 2373 734 I 2373 732 I 2375 730 I 2375 730 I C 
2441 708 M 2480 695 I 2483 695 I 2484 697 I 2484 700 I 2482 701 I 2444 713 I 2441 713 I 2440 712 I 2440 710 I 2441 708 I 2441 708 I C 
:  L ; K 
N 2481 670 M 2563 670 I 2497 720 I 2481 670 I C 
 O 16 Lw solid N 2334 816 M 2337 831 I 2340 847 I 2340 863 I 2338 879 I 2335 897 I 2330 914 I 2324 931 I 2317 948 I : 0.605 0.605 +S K 
; N 2316 841 M 2280 753 I 2361 802 I 2316 841 I C 
 O Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Text 5.0 0
/TextInit{TextInitialised? not{/Pscript_Windows_Font & d/TextInitialised? T d
/fM[1 0 0 1 0 0]d/mFM matrix d/iMat[1 0 0.212557 1 0 0]d}if}b/copyfont{1 ^
length add dict `{1 ^/FID ne{d}{! !}?}forall & E}b/EncodeDict 11 dict d/bullets
{{/bullet}repeat}b/rF{3 copyfont @ ` ~ EncodeDict ~ get/Encoding ~ 3 ^/0 eq{&
/CharStrings known{CharStrings/Eth known not{! EncodeDict/ANSIEncodingOld get}
if}if}if d E}b/mF{@ 7 1 $ findfont ~{@/Encoding get @ StandardEncoding eq{! T}{
{ISOLatin1Encoding}stopped{! F}{eq}?{T}{@ ` T 32 1 127{Encoding 1 ^ get
StandardEncoding 3 -1 $ get eq and}for E}?}?}{F}?{1 ^ ~ rF}{0 copyfont}? 6 -2 $
! ! ~ !/pd_charset @ where{~ get 128 eq{@ FDV 2 copy get @ length array copy
put pd_CoverFCRange}if}{!}? 2 ^ ~ definefont fM 5 4 -1 $ put fM 4 0 put fM
makefont Pscript_Windows_Font 3 1 $ put}b/sLT{: Lw -M currentpoint snap M 0 - 0
Lc K ;}b/xUP null d/yUP null d/uW null d/xSP null d/ySP null d/sW null d/sSU{N
/uW ~ d/yUP ~ d/xUP ~ d}b/sU{xUP yUP uW sLT}b/sST{N/sW ~ d/ySP ~ d/xSP ~ d}b/sT
{xSP ySP sW sLT}b/sR{: + R 0 0 M}b/sRxy{: matrix astore concat 0 0 M}b/eR/; , d
/AddOrigFP{{&/FontInfo known{&/FontInfo get length 6 add}{6}? dict `
/WinPitchAndFamily ~ d/WinCharSet ~ d/OrigFontType ~ d/OrigFontStyle ~ d
/OrigFontName ~ d & E/FontInfo ~ d}{! ! ! ! !}?}b/mFS{makefont
Pscript_Windows_Font 3 1 $ put}b/mF42D{0 copyfont `/FontName ~ d 2 copy ~ sub 1
add dict `/.notdef 0 d 2 copy 1 ~{@ 3 ^ sub Encoding ~ get ~ d}for & E
/CharStrings ~ d ! ! & @ E/FontName get ~ definefont}b/mF42{15 dict ` @ 4 1 $
FontName ~ d/FontType 0 d/FMapType 2 d/FontMatrix[1 0 0 1 0 0]d 1 ^ 254 add 255
idiv @ array/Encoding ~ d 0 1 3 -1 $ 1 sub{@ Encoding 3 1 $ put}for/FDepVector
Encoding length array d/CharStrings 2 dict `/.notdef 0 d & E d 0 1 Encoding
length 1 sub{@ @ 10 lt{! FontName length 1 add string}{100 lt{FontName length 2
add string}{FontName length 3 add string}?}? @ 0 FontName @ length string cvs
putinterval @ 3 -1 $ @ 4 1 $ 3 string cvs FontName length ~ putinterval cvn 1 ^
256 mul @ 255 add 3 -1 $ 4 ^ findfont mF42D FDepVector 3 1 $ put}for & @ E
/FontName get ~ definefont ! ! ! mF}b/mF_OTF_V{~ ! ~ ! 4 -1 $ ! findfont 2 ^ ~
definefont fM @ @ 4 6 -1 $ neg put 5 0 put 90 matrix R matrix concatmatrix
makefont Pscript_Windows_Font 3 1 $ put}b/mF_TTF_V{3{~ !}repeat 3 -1 $ !
findfont 1 ^ ~ definefont Pscript_Windows_Font 3 1 $ put}b/UmF{L2?
{Pscript_Windows_Font ~ undef}{!}?}b/UmF42{@ findfont/FDepVector get{/FontName
get undefinefont}forall undefinefont}b
%%EndResource
end reinitialize
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Encoding256 5.0 0
/CharCol256Encoding[/.notdef/breve/caron/dotaccent/dotlessi/fi/fl/fraction
/hungarumlaut/Lslash/lslash/minus/ogonek/ring/Zcaron/zcaron/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/space/exclam/quotedbl/numbersign
/dollar/percent/ampersand/quotesingle/parenleft/parenright/asterisk/plus/comma
/hyphen/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S
/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore/grave
/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright
/asciitilde/.notdef/Euro/.notdef/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef
/.notdef/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/.notdef/registered
/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph
/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter
/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis
/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute
/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve
/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis]def EncodeDict/256 CharCol256Encoding put
%%EndResource
end reinitialize

%%IncludeResource: font Helvetica
Pscript_WinNT_Incr begin
%%BeginResource: file Pscript_Win_Euro_L2 5.0 0
/UseT3EuroFont{/currentdistillerparams where{pop currentdistillerparams
/CoreDistVersion get 4000 le}{false}ifelse}bind def/NewEuroT3Font?{dup/FontType
get 3 eq{dup/EuroFont known exch/BaseFont known and}{pop false}ifelse}bind def
/T1FontHasEuro{dup/CharStrings known not{dup NewEuroT3Font?{dup/EuroGlyphName
get exch/EuroFont get/CharStrings get exch known{true}{false}ifelse}{pop false}
ifelse}{dup/FontType get 1 eq{/CharStrings get/Euro known}{dup/InfoDict known{
/InfoDict get/Euro known}{/CharStrings get/Euro known}ifelse}ifelse}ifelse}bind
def/FontHasEuro{findfont dup/Blend known{pop true}{T1FontHasEuro}ifelse}bind
def/EuroEncodingIdx 1 def/EuroFontHdr{12 dict begin/FontInfo 10 dict dup begin
/version(001.000)readonly def/Notice(Copyright (c)1999 Adobe Systems
Incorporated. All Rights Reserved.)readonly def/FullName(Euro)readonly def
/FamilyName(Euro)readonly def/Weight(Regular)readonly def/isFixedPitch false
def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def end
readonly def/FontName/Euro def/Encoding 256 array 0 1 255{1 index exch/.notdef
put}for def/PaintType 0 def/FontType 1 def/FontMatrix[0.001 0 0 0.001 0 0]def
/FontBBox{-25 -23 1500 804}readonly def currentdict end dup/Private 20 dict dup
begin/ND{def}def/NP{put}def/lenIV -1 def/RD{string currentfile exch
readhexstring pop}def/-|{string currentfile exch readstring pop}executeonly def
/|-{def}executeonly def/|{put}executeonly def/BlueValues[-20 0 706 736 547 572]
|-/OtherBlues[-211 -203]|-/BlueScale 0.0312917 def/MinFeature{16 16}|-/StdHW
[60]|-/StdVW[71]|-/ForceBold false def/password 5839 def/Erode{8.5 dup 3 -1
roll 0.1 mul exch 0.5 sub mul cvi sub dup mul 71 0 dtransform dup mul exch dup
mul add le{pop pop 1.0 1.0}{pop pop 0.0 1.5}ifelse}def/OtherSubrs[{}{}{}
{systemdict/internaldict known not{pop 3}{1183615869 systemdict/internaldict
get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck
get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]|-/Subrs 5 array dup 0
<8E8B0C100C110C110C210B>put dup 1<8B8C0C100B>put dup 2<8B8D0C100B>put dup 3<0B>
put dup 4<8E8C8E0C100C110A0B>put |- 2 index/CharStrings 256 dict dup begin
/.notdef<8b8b0d0e>def end end put put dup/FontName get exch definefont pop}bind
def/AddEuroGlyph{2 index exch EuroEncodingIdx 1 eq{EuroFontHdr}if systemdict
begin/Euro findfont dup dup/Encoding get 5 1 roll/Private get begin/CharStrings
get dup 3 index known{pop pop pop pop end end}{begin 1 index exch def end end
end EuroEncodingIdx dup 1 add/EuroEncodingIdx exch def exch put}ifelse}bind def
/GetNewXUID{currentdict/XUID known{[7 XUID aload pop]true}{currentdict/UniqueID
known{[7 UniqueID]true}{false}ifelse}ifelse}bind def/BuildT3EuroFont{exch 16
dict begin dup/FontName exch def findfont dup/Encoding get/Encoding exch def
dup length 1 add dict copy dup/FID undef begin dup dup/FontName exch def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for def GetNewXUID{/XUID
exch def}if currentdict end definefont pop/BaseFont exch findfont 1000
scalefont def/EuroFont exch findfont 1000 scalefont def pop/EuroGlyphName exch
def/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox BaseFont/FontBBox
get def/Char 1 string def/BuildChar{exch dup begin/Encoding get 1 index get
/Euro eq{BaseFont T1FontHasEuro{false}{true}ifelse}{false}ifelse{EuroFont
setfont pop userdict/Idx 0 put EuroFont/Encoding get{EuroGlyphName eq{exit}
{userdict/Idx Idx 1 add put}ifelse}forall userdict/Idx get}{dup dup Encoding
exch get BaseFont/Encoding get 3 1 roll put BaseFont setfont}ifelse Char 0 3 -1
roll put Char stringwidth newpath 0 0 moveto Char true charpath flattenpath
pathbbox setcachedevice 0 0 moveto Char show end}bind def currentdict end dup
/FontName get exch definefont pop}bind def/AddEuroToT1Font{dup findfont dup
length 10 add dict copy dup/FID undef begin/EuroFont 3 -1 roll findfont 1000
scalefont def CharStrings dup length 1 add dict copy begin/Euro{EuroFont
setfont pop EuroGBBox aload pop setcachedevice 0 0 moveto EuroGName glyphshow}
bind def currentdict end/CharStrings exch def GetNewXUID{/XUID exch def}if 3 1
roll/EuroGBBox exch def/EuroGName exch def currentdict end definefont pop}bind
def/BuildNewFont{UseT3EuroFont{BuildT3EuroFont}{pop AddEuroToT1Font}ifelse}bind
def/UseObliqueEuro{findfont/FontMatrix get dup 2 get 0 eq exch dup 0 get exch 3
get eq and UseT3EuroFont or}bind def
%%EndResource
end reinitialize
/Helvetica FontHasEuro not
{
/Euro.Helvetica
 [556 0 24 -19 541 703 ] 
<A3F8C00DD4E90378DA01F779D301F808D301F904DA01F899F908156CB447AD338B08FB2D
8B372B7BFB37085806724305D30644075B06724305DA06A0FB36E035F7218B08E08BCDB7
939208EE077A71405E418B083F8B4CCE84F108F76506A3D305FB8306D207F79C06A3D305
FBB10692E2B7E8F28B08E08BBE62A45A08090E>
AddEuroGlyph
/Euro /Helvetica /Helvetica-Copy BuildNewFont
} if
F /F0 0 /256 T /Helvetica mF 
/F0S60 F0 [96.902 0 0 -96.902 0 0 ] mFS
F0S60 Ji 
938 1545 M (q)S 
1334 1626 M (s)S 
2469 870 M (t)S 
2417 634 M (v)S 
/F0S71 F0 [113.258 0 0 -113.258 0 0 ] mFS
F0S71 Ji 
481 128 M (Y)S 
2788 2290 M (X)S 
F0S60 Ji 
2126 1938 M (d)S 
1 Lw solid N 1688 945 M 1699 984 I 1699 986 I 1697 987 I 1695 987 I 1694 985 I 1683 946 I 1684 944 I 1685 942 I 1687 943 I 1688 945 I 1688 945 I C 
1707 1012 M 1717 1051 I 1717 1053 I 1716 1055 I 1713 1054 I 1712 1053 I 1701 1013 I 1702 1011 I 1704 1010 I 1705 1010 I 1707 1012 I 1707 1012 I C 
1725 1079 M 1736 1119 I 1736 1121 I 1734 1122 I 1731 1122 I 1730 1120 I 1719 1081 I 1720 1079 I 1722 1077 I 1724 1077 I 1725 1079 I 1725 1079 I C 
1744 1147 M 1754 1186 I 1754 1188 I 1752 1190 I 1750 1190 I 1748 1188 I 1738 1148 I 1738 1146 I 1740 1145 I 1742 1145 I 1744 1147 I 1744 1147 I C 
1762 1214 M 1773 1253 I 1772 1256 I 1770 1257 I 1768 1257 I 1767 1255 I 1756 1216 I 1756 1213 I 1758 1212 I 1760 1212 I 1762 1214 I 1762 1214 I C 
1780 1282 M 1791 1320 I 1790 1323 I 1788 1324 I 1787 1324 I 1785 1322 I 1774 1283 I 1774 1280 I 1776 1279 I 1779 1280 I 1780 1282 I 1780 1282 I C 
1798 1349 M 1809 1388 I 1809 1390 I 1807 1391 I 1805 1391 I 1803 1389 I 1793 1350 I 1793 1348 I 1794 1346 I 1797 1347 I 1798 1349 I 1798 1349 I C 
1817 1416 M 1827 1455 I 1827 1457 I 1825 1459 I 1823 1458 I 1822 1457 I 1811 1417 I 1811 1415 I 1813 1414 I 1815 1414 I 1817 1416 I 1817 1416 I C 
1835 1483 M 1845 1523 I 1845 1525 I 1843 1526 I 1841 1526 I 1840 1524 I 1829 1485 I 1830 1483 I 1831 1481 I 1834 1481 I 1835 1483 I 1835 1483 I C 
1853 1551 M 1864 1590 I 1863 1592 I 1862 1594 I 1860 1594 I 1858 1592 I 1848 1552 I 1848 1550 I 1850 1549 I 1852 1549 I 1853 1551 I 1853 1551 I C 
1871 1618 M 1882 1657 I 1882 1660 I 1880 1661 I 1878 1661 I 1876 1659 I 1866 1620 I 1866 1617 I 1868 1616 I 1870 1617 I 1871 1618 I 1871 1618 I C 
1889 1686 M 1900 1724 I 1900 1727 I 1899 1728 I 1896 1728 I 1895 1726 I 1884 1687 I 1885 1685 I 1886 1683 I 1888 1684 I 1889 1686 I 1889 1686 I C 
1908 1753 M 1919 1792 I 1919 1794 I 1917 1796 I 1914 1795 I 1913 1793 I 1902 1754 I 1903 1752 I 1905 1750 I 1906 1751 I 1908 1753 I 1908 1753 I C 
1926 1820 M 1930 1833 I 1929 1836 I 1928 1837 I 1926 1837 I 1925 1835 I 1920 1821 I 1921 1819 I 1923 1818 I 1925 1818 I 1926 1820 I 1926 1820 I C 
:  L ; K 
N 2283 1739 M 2272 1700 I 2272 1698 I 2274 1696 I 2276 1696 I 2278 1698 I 2288 1738 I 2287 1740 I 2286 1741 I 2284 1741 I 2283 1739 I 2283 1739 I C 
2264 1672 M 2254 1632 I 2254 1630 I 2256 1629 I 2258 1629 I 2260 1631 I 2270 1670 I 2270 1673 I 2268 1674 I 2266 1673 I 2264 1672 I 2264 1672 I C 
2246 1604 M 2236 1565 I 2236 1563 I 2238 1561 I 2240 1562 I 2241 1564 I 2252 1603 I 2252 1605 I 2250 1606 I 2247 1606 I 2246 1604 I 2246 1604 I C 
2228 1537 M 2218 1498 I 2218 1495 I 2220 1494 I 2222 1495 I 2223 1496 I 2234 1535 I 2234 1538 I 2232 1539 I 2230 1539 I 2228 1537 I 2228 1537 I C 
2210 1469 M 2200 1431 I 2200 1428 I 2201 1427 I 2204 1427 I 2205 1429 I 2216 1468 I 2215 1471 I 2214 1472 I 2212 1471 I 2210 1469 I 2210 1469 I C 
2192 1402 M 2181 1363 I 2182 1361 I 2184 1359 I 2186 1360 I 2187 1362 I 2198 1401 I 2197 1403 I 2195 1405 I 2194 1404 I 2192 1402 I 2192 1402 I C 
2174 1335 M 2163 1296 I 2164 1293 I 2166 1292 I 2168 1293 I 2169 1294 I 2180 1333 I 2180 1336 I 2178 1337 I 2175 1337 I 2174 1335 I 2174 1335 I C 
2156 1268 M 2146 1228 I 2146 1226 I 2148 1225 I 2150 1225 I 2151 1226 I 2161 1266 I 2161 1268 I 2160 1269 I 2157 1269 I 2156 1268 I 2156 1268 I C 
2138 1200 M 2128 1160 I 2128 1159 I 2129 1157 I 2132 1157 I 2133 1159 I 2143 1199 I 2143 1201 I 2141 1202 I 2139 1202 I 2138 1200 I 2138 1200 I C 
2120 1133 M 2109 1093 I 2109 1091 I 2111 1090 I 2114 1090 I 2115 1092 I 2126 1131 I 2125 1133 I 2123 1135 I 2122 1134 I 2120 1133 I 2120 1133 I C 
2102 1065 M 2091 1026 I 2092 1024 I 2093 1022 I 2095 1023 I 2097 1024 I 2108 1064 I 2107 1066 I 2105 1067 I 2103 1067 I 2102 1065 I 2102 1065 I C 
2084 998 M 2073 959 I 2074 956 I 2075 955 I 2077 955 I 2079 957 I 2089 996 I 2089 999 I 2088 1000 I 2085 1000 I 2084 998 I 2084 998 I C 
2066 930 M 2055 891 I 2055 889 I 2057 888 I 2060 888 I 2061 890 I 2071 929 I 2071 931 I 2069 933 I 2067 932 I 2066 930 I 2066 930 I C 
2048 863 M 2043 844 I 2043 842 I 2045 841 I 2047 841 I 2048 843 I 2053 862 I 2053 864 I 2051 865 I 2049 865 I 2048 863 I 2048 863 I C 
:  L ; K 
N 522 2244 M 553 2216 I 554 2216 I 556 2216 I 557 2219 I 556 2220 I 527 2248 I 524 2249 I 522 2248 I 522 2246 I 522 2244 I 522 2244 I C 
574 2197 M 603 2169 I 606 2168 I 608 2169 I 608 2171 I 608 2173 I 577 2201 I 576 2202 I 574 2200 I 573 2199 I 574 2197 I 574 2197 I C 
625 2150 M 655 2122 I 657 2121 I 659 2122 I 660 2124 I 659 2126 I 629 2154 I 627 2154 I 625 2153 I 624 2151 I 625 2150 I 625 2150 I C 
676 2102 M 706 2074 I 708 2074 I 711 2074 I 711 2077 I 710 2079 I 680 2107 I 678 2107 I 676 2106 I 676 2104 I 676 2102 I 676 2102 I C 
728 2054 M 757 2027 I 760 2027 I 762 2027 I 762 2030 I 762 2031 I 732 2059 I 729 2060 I 728 2059 I 727 2057 I 728 2054 I 728 2054 I C 
779 2007 M 809 1980 I 811 1979 I 813 1980 I 814 1982 I 813 1984 I 783 2011 I 781 2013 I 779 2011 I 778 2010 I 779 2007 I 779 2007 I C 
830 1960 M 860 1933 I 862 1931 I 865 1933 I 865 1935 I 864 1937 I 834 1964 I 832 1965 I 830 1964 I 829 1962 I 830 1960 I 830 1960 I C 
882 1913 M 911 1885 I 914 1884 I 915 1885 I 917 1887 I 915 1890 I 886 1917 I 883 1918 I 882 1917 I 881 1915 I 882 1913 I 882 1913 I C 
933 1865 M 963 1838 I 965 1837 I 967 1838 I 968 1840 I 967 1842 I 937 1870 I 935 1870 I 932 1870 I 932 1867 I 933 1865 I 933 1865 I C 
984 1818 M 1014 1790 I 1016 1790 I 1018 1791 I 1019 1793 I 1018 1795 I 988 1822 I 986 1823 I 984 1822 I 983 1820 I 984 1818 I 984 1818 I C 
1035 1771 M 1066 1743 I 1067 1743 I 1069 1743 I 1071 1746 I 1069 1747 I 1040 1775 I 1037 1776 I 1035 1775 I 1035 1773 I 1035 1771 I 1035 1771 I C 
1087 1724 M 1117 1696 I 1119 1695 I 1121 1696 I 1121 1698 I 1121 1700 I 1091 1728 I 1089 1729 I 1087 1727 I 1086 1726 I 1087 1724 I 1087 1724 I C 
1138 1676 M 1168 1649 I 1170 1648 I 1172 1649 I 1173 1651 I 1172 1653 I 1142 1681 I 1140 1681 I 1138 1680 I 1137 1678 I 1138 1676 I 1138 1676 I C 
1189 1629 M 1220 1601 I 1221 1601 I 1223 1601 I 1224 1604 I 1223 1606 I 1193 1633 I 1191 1634 I 1189 1633 I 1189 1631 I 1189 1629 I 1189 1629 I C 
1241 1581 M 1270 1554 I 1273 1554 I 1275 1554 I 1275 1557 I 1275 1558 I 1244 1586 I 1243 1587 I 1241 1586 I 1240 1584 I 1241 1581 I 1241 1581 I C 
1292 1534 M 1322 1507 I 1324 1506 I 1326 1507 I 1327 1509 I 1326 1511 I 1296 1538 I 1294 1540 I 1292 1538 I 1291 1537 I 1292 1534 I 1292 1534 I C 
1343 1487 M 1373 1460 I 1375 1458 I 1377 1460 I 1378 1461 I 1377 1464 I 1347 1491 I 1345 1492 I 1343 1491 I 1343 1489 I 1343 1487 I 1343 1487 I C 
1395 1440 M 1424 1412 I 1427 1411 I 1429 1412 I 1429 1414 I 1429 1417 I 1398 1444 I 1396 1445 I 1395 1444 I 1393 1442 I 1395 1440 I 1395 1440 I C 
1446 1392 M 1476 1365 I 1478 1364 I 1480 1365 I 1481 1367 I 1479 1369 I 1450 1397 I 1448 1397 I 1445 1397 I 1445 1394 I 1446 1392 I 1446 1392 I C 
1497 1345 M 1527 1317 I 1529 1317 I 1531 1318 I 1532 1320 I 1531 1322 I 1501 1349 I 1499 1350 I 1497 1349 I 1496 1347 I 1497 1345 I 1497 1345 I C 
1548 1298 M 1578 1270 I 1581 1269 I 1582 1270 I 1583 1273 I 1582 1274 I 1552 1302 I 1550 1303 I 1548 1302 I 1547 1300 I 1548 1298 I 1548 1298 I C 
1600 1251 M 1630 1223 I 1631 1222 I 1634 1223 I 1634 1225 I 1634 1227 I 1604 1255 I 1602 1256 I 1599 1254 I 1599 1253 I 1600 1251 I 1600 1251 I C 
1651 1203 M 1681 1176 I 1683 1175 I 1685 1176 I 1686 1178 I 1685 1180 I 1655 1208 I 1653 1208 I 1651 1207 I 1650 1205 I 1651 1203 I 1651 1203 I C 
1702 1156 M 1732 1128 I 1734 1128 I 1736 1128 I 1737 1131 I 1736 1133 I 1706 1160 I 1704 1161 I 1702 1160 I 1701 1158 I 1702 1156 I 1702 1156 I C 
1754 1108 M 1783 1081 I 1786 1080 I 1788 1081 I 1788 1083 I 1788 1085 I 1757 1113 I 1756 1114 I 1753 1113 I 1753 1111 I 1754 1108 I 1754 1108 I C 
1805 1061 M 1835 1034 I 1837 1033 I 1839 1034 I 1840 1036 I 1839 1038 I 1809 1065 I 1807 1067 I 1805 1065 I 1804 1064 I 1805 1061 I 1805 1061 I C 
1856 1014 M 1886 987 I 1888 985 I 1890 987 I 1891 988 I 1890 991 I 1860 1018 I 1858 1019 I 1856 1018 I 1856 1016 I 1856 1014 I 1856 1014 I C 
1908 967 M 1937 939 I 1940 938 I 1942 939 I 1942 941 I 1942 943 I 1911 971 I 1909 972 I 1907 971 I 1906 968 I 1908 967 I 1908 967 I C 
1959 919 M 1989 892 I 1991 891 I 1993 892 I 1994 894 I 1992 896 I 1963 924 I 1960 924 I 1959 924 I 1958 921 I 1959 919 I 1959 919 I C 
:  L ; K 
N 1970 878 M 2045 844 I 2005 916 I 1970 878 I C 
 O N 522 2244 M 550 2214 I 551 2213 I 553 2214 I 554 2216 I 554 2217 I 527 2248 I 525 2249 I 522 2248 I 522 2246 I 522 2244 I 522 2244 I C 
569 2192 M 596 2162 I 598 2161 I 600 2162 I 601 2163 I 600 2165 I 573 2196 I 571 2197 I 569 2196 I 568 2194 I 569 2192 I 569 2192 I C 
615 2140 M 642 2110 I 645 2109 I 646 2110 I 648 2111 I 646 2113 I 620 2144 I 617 2145 I 616 2144 I 614 2142 I 615 2140 I 615 2140 I C 
662 2088 M 689 2057 I 691 2057 I 693 2057 I 694 2059 I 693 2062 I 666 2092 I 664 2093 I 662 2092 I 661 2090 I 662 2088 I 662 2088 I C 
708 2036 M 736 2005 I 737 2005 I 739 2005 I 740 2007 I 740 2010 I 713 2040 I 711 2040 I 708 2040 I 708 2038 I 708 2036 I 708 2036 I C 
755 1984 M 782 1953 I 784 1953 I 786 1953 I 787 1955 I 786 1958 I 759 1988 I 757 1988 I 755 1988 I 754 1986 I 755 1984 I 755 1984 I C 
801 1931 M 828 1901 I 830 1901 I 832 1901 I 833 1903 I 832 1905 I 805 1936 I 803 1937 I 802 1936 I 800 1934 I 801 1931 I 801 1931 I C 
848 1880 M 875 1849 I 877 1849 I 879 1849 I 880 1851 I 879 1853 I 852 1884 I 850 1885 I 848 1884 I 847 1882 I 848 1880 I 848 1880 I C 
894 1828 M 921 1797 I 923 1796 I 925 1797 I 926 1799 I 926 1801 I 898 1832 I 897 1833 I 894 1832 I 894 1830 I 894 1828 I 894 1828 I C 
940 1776 M 968 1746 I 970 1744 I 972 1745 I 973 1747 I 972 1749 I 945 1779 I 943 1781 I 941 1779 I 940 1778 I 940 1776 I 940 1776 I C 
987 1724 M 1014 1693 I 1016 1692 I 1018 1693 I 1019 1695 I 1018 1697 I 991 1727 I 989 1729 I 988 1728 I 986 1726 I 987 1724 I 987 1724 I C 
1034 1672 M 1061 1641 I 1063 1640 I 1064 1641 I 1066 1643 I 1065 1645 I 1038 1675 I 1036 1676 I 1034 1676 I 1033 1673 I 1034 1672 I 1034 1672 I C 
1080 1620 M 1107 1589 I 1109 1588 I 1111 1589 I 1112 1591 I 1112 1593 I 1084 1623 I 1083 1624 I 1080 1624 I 1079 1621 I 1080 1620 I 1080 1620 I C 
1126 1567 M 1154 1537 I 1155 1536 I 1158 1537 I 1158 1539 I 1158 1541 I 1130 1571 I 1129 1572 I 1127 1572 I 1126 1569 I 1126 1567 I 1126 1567 I C 
1173 1515 M 1200 1485 I 1202 1484 I 1204 1485 I 1205 1487 I 1204 1489 I 1177 1519 I 1175 1520 I 1173 1520 I 1172 1517 I 1173 1515 I 1173 1515 I C 
1220 1463 M 1247 1433 I 1249 1432 I 1250 1433 I 1252 1435 I 1251 1437 I 1224 1467 I 1222 1468 I 1220 1468 I 1219 1466 I 1220 1463 I 1220 1463 I C 
1266 1411 M 1293 1381 I 1295 1380 I 1297 1381 I 1298 1383 I 1297 1385 I 1270 1415 I 1268 1416 I 1266 1415 I 1265 1414 I 1266 1411 I 1266 1411 I C 
1312 1359 M 1339 1329 I 1341 1328 I 1344 1329 I 1344 1331 I 1344 1332 I 1316 1363 I 1315 1364 I 1313 1363 I 1312 1362 I 1312 1359 I 1312 1359 I C 
1359 1307 M 1386 1277 I 1388 1276 I 1390 1277 I 1391 1279 I 1390 1281 I 1363 1311 I 1361 1312 I 1359 1311 I 1358 1309 I 1359 1307 I 1359 1307 I C 
1405 1255 M 1432 1225 I 1435 1224 I 1436 1225 I 1438 1226 I 1437 1229 I 1410 1259 I 1408 1260 I 1405 1259 I 1405 1257 I 1405 1255 I 1405 1255 I C 
1452 1203 M 1479 1173 I 1481 1172 I 1483 1173 I 1484 1174 I 1483 1177 I 1456 1207 I 1454 1208 I 1452 1207 I 1451 1205 I 1452 1203 I 1452 1203 I C 
1498 1151 M 1525 1121 I 1527 1120 I 1530 1121 I 1530 1122 I 1530 1125 I 1502 1155 I 1501 1156 I 1498 1155 I 1498 1153 I 1498 1151 I 1498 1151 I C 
1545 1099 M 1572 1068 I 1574 1068 I 1576 1068 I 1577 1070 I 1576 1073 I 1549 1103 I 1547 1104 I 1545 1103 I 1544 1101 I 1545 1099 I 1545 1099 I C 
1591 1047 M 1618 1016 I 1621 1016 I 1622 1016 I 1624 1018 I 1622 1021 I 1596 1051 I 1593 1052 I 1591 1051 I 1590 1049 I 1591 1047 I 1591 1047 I C 
:  L ; K 
N 1614 987 M 1686 945 I 1653 1021 I 1614 987 I C 
 O N 935 945 M 976 945 I 978 945 I 979 948 I 978 950 I 976 950 I 935 950 I 934 950 I 932 948 I 934 945 I 935 945 I 935 945 I C 
1005 945 M 1046 945 I 1048 945 I 1049 948 I 1048 950 I 1046 950 I 1005 950 I 1003 950 I 1002 948 I 1003 945 I 1005 945 I 1005 945 I C 
1075 945 M 1116 945 I 1118 945 I 1118 948 I 1118 950 I 1116 950 I 1075 950 I 1073 950 I 1072 948 I 1073 945 I 1075 945 I 1075 945 I C 
1145 945 M 1186 945 I 1187 945 I 1189 948 I 1187 950 I 1186 950 I 1145 950 I 1143 950 I 1142 948 I 1143 945 I 1145 945 I 1145 945 I C 
1215 945 M 1255 945 I 1257 945 I 1258 948 I 1257 950 I 1255 950 I 1215 950 I 1212 950 I 1212 948 I 1212 945 I 1215 945 I 1215 945 I C 
1284 945 M 1325 945 I 1327 945 I 1328 948 I 1327 950 I 1325 950 I 1284 950 I 1283 950 I 1281 948 I 1283 945 I 1284 945 I 1284 945 I C 
1354 945 M 1395 945 I 1397 945 I 1398 948 I 1397 950 I 1395 950 I 1354 950 I 1352 950 I 1351 948 I 1352 945 I 1354 945 I 1354 945 I C 
1424 945 M 1465 945 I 1467 945 I 1467 948 I 1467 950 I 1465 950 I 1424 950 I 1422 950 I 1421 948 I 1422 945 I 1424 945 I 1424 945 I C 
1494 945 M 1535 945 I 1536 945 I 1538 948 I 1536 950 I 1535 950 I 1494 950 I 1492 950 I 1491 948 I 1492 945 I 1494 945 I 1494 945 I C 
1564 945 M 1604 945 I 1606 945 I 1607 948 I 1606 950 I 1604 950 I 1564 950 I 1561 950 I 1561 948 I 1561 945 I 1564 945 I 1564 945 I C 
1633 945 M 1674 945 I 1676 945 I 1677 948 I 1676 950 I 1674 950 I 1633 950 I 1631 950 I 1630 948 I 1631 945 I 1633 945 I 1633 945 I C 
1703 945 M 1744 945 I 1746 945 I 1747 948 I 1746 950 I 1744 950 I 1703 950 I 1701 950 I 1700 948 I 1701 945 I 1703 945 I 1703 945 I C 
1773 945 M 1814 945 I 1816 945 I 1816 948 I 1816 950 I 1814 950 I 1773 950 I 1771 950 I 1770 948 I 1771 945 I 1773 945 I 1773 945 I C 
1843 945 M 1883 945 I 1885 945 I 1886 948 I 1885 950 I 1883 950 I 1843 950 I 1840 950 I 1840 948 I 1840 945 I 1843 945 I 1843 945 I C 
1913 945 M 1953 945 I 1955 945 I 1956 948 I 1955 950 I 1953 950 I 1913 950 I 1910 950 I 1909 948 I 1910 945 I 1913 945 I 1913 945 I C 
1982 945 M 2023 945 I 2025 945 I 2026 948 I 2025 950 I 2023 950 I 1982 950 I 1980 950 I 1979 948 I 1980 945 I 1982 945 I 1982 945 I C 
2052 945 M 2092 945 I 2095 945 I 2095 948 I 2095 950 I 2092 950 I 2052 950 I 2050 950 I 2049 948 I 2050 945 I 2052 945 I 2052 945 I C 
2122 945 M 2163 945 I 2165 945 I 2165 948 I 2165 950 I 2163 950 I 2122 950 I 2120 950 I 2119 948 I 2120 945 I 2122 945 I 2122 945 I C 
2192 945 M 2232 945 I 2234 945 I 2235 948 I 2234 950 I 2232 950 I 2192 950 I 2189 950 I 2189 948 I 2189 945 I 2192 945 I 2192 945 I C 
2261 945 M 2302 945 I 2304 945 I 2305 948 I 2304 950 I 2302 950 I 2261 950 I 2259 950 I 2258 948 I 2259 945 I 2261 945 I 2261 945 I C 
2331 945 M 2372 945 I 2374 945 I 2375 948 I 2374 950 I 2372 950 I 2331 950 I 2329 950 I 2328 948 I 2329 945 I 2331 945 I 2331 945 I C 
2401 945 M 2441 945 I 2444 945 I 2444 948 I 2444 950 I 2441 950 I 2401 950 I 2399 950 I 2398 948 I 2399 945 I 2401 945 I 2401 945 I C 
2470 945 M 2512 945 I 2513 945 I 2514 948 I 2513 950 I 2512 950 I 2470 950 I 2469 950 I 2468 948 I 2469 945 I 2470 945 I 2470 945 I C 
2541 945 M 2581 945 I 2583 945 I 2584 948 I 2583 950 I 2581 950 I 2541 950 I 2538 950 I 2538 948 I 2538 945 I 2541 945 I 2541 945 I C 
2610 945 M 2651 945 I 2653 945 I 2654 948 I 2653 950 I 2651 950 I 2610 950 I 2608 950 I 2607 948 I 2608 945 I 2610 945 I 2610 945 I C 
:  L ; K 
N 1223 683 M 1183 694 I 1181 694 I 1180 692 I 1180 689 I 1182 688 I 1221 677 I 1224 678 I 1225 680 I 1224 682 I 1223 683 I 1223 683 I C 
1155 701 M 1116 712 I 1114 711 I 1112 709 I 1113 707 I 1115 706 I 1154 695 I 1156 696 I 1157 697 I 1157 700 I 1155 701 I 1155 701 I C 
1088 719 M 1081 721 I 1080 720 I 1078 718 I 1078 717 I 1080 715 I 1086 713 I 1089 713 I 1090 715 I 1090 718 I 1088 719 I 1088 719 I C 
:  L ; K 
N 1426 1396 M 1387 1406 I 1384 1406 I 1383 1405 I 1383 1402 I 1385 1401 I 1424 1391 I 1427 1391 I 1428 1392 I 1428 1395 I 1426 1396 I 1426 1396 I C 
1358 1414 M 1319 1425 I 1317 1424 I 1316 1422 I 1316 1420 I 1318 1419 I 1357 1408 I 1359 1409 I 1361 1411 I 1360 1412 I 1358 1414 I 1358 1414 I C 
1291 1432 M 1285 1434 I 1283 1434 I 1281 1432 I 1281 1429 I 1283 1428 I 1290 1426 I 1292 1426 I 1293 1428 I 1293 1431 I 1291 1432 I 1291 1432 I C 
:  L ; K 
16 Lw solid N 1103 797 M 1261 1351 I : 0.605 0.605 +S K 
; N 1077 813 M 1081 718 I 1134 796 I 1077 813 I C 
 O N 1288 1336 M 1284 1431 I 1230 1352 I 1288 1336 I C 
 O 1012 1156 M (w)S 
LH
%%PageTrailer

%%Trailer
%%DocumentNeededResources: 
%%+ font Helvetica
%%DocumentSuppliedResources: 
%%+ procset Pscript_WinNT_ErrorHandler 5.0 0
%%+ procset Pscript_FatalError 5.0 0
%%+ procset Pscript_Win_Basic 5.0 0
%%+ procset Pscript_Win_Utils_L2 5.0 0
%%+ procset Pscript_Win_GdiObject 5.0 0
%%+ procset Pscript_Win_GdiObject_L2 5.0 0
%%+ procset Pscript_Text 5.0 0
%%+ procset Pscript_Encoding256 5.0 0
%%+ procset Pscript_Win_Euro_L2 5.0 0
Pscript_WinNT_Incr dup /terminate get exec
%%EOF
